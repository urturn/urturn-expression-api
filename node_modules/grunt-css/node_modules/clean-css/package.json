{
  "name": "clean-css",
  "author": {
    "name": "Jakub Pawlowicz",
    "email": "jakub@goalsmashers.com",
    "url": "http://twitter.com/GoalSmashers"
  },
  "description": "A well-tested CSS minifier",
  "keywords": [
    "css",
    "minifier"
  ],
  "homepage": "https://github.com/GoalSmashers/clean-css",
  "repository": {
    "type": "git",
    "url": "https://github.com/GoalSmashers/clean-css.git"
  },
  "version": "0.9.1",
  "main": "index.js",
  "bin": {
    "cleancss": "./bin/cleancss"
  },
  "scripts": {
    "test": "node_modules/.bin/vows test/*-test.js"
  },
  "dependencies": {
    "optimist": "0.3.x"
  },
  "devDependencies": {
    "vows": "0.6.x",
    "jshint": "0.9.x"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "readme": "[![build status](https://secure.travis-ci.org/GoalSmashers/clean-css.png)](http://travis-ci.org/GoalSmashers/clean-css)\n## What is clean-css? ##\n\nClean-css is a node.js library for minifying CSS files. It does the same job as YUI Compressor's CSS minifier but much faster thanks to many speed optimizations and the node.js' V8 engine.\n\n## Usage ##\n\n### What are the requirements? ###\n\n    node 0.6.0+ on *nix (fully tested on OS X 10.6+ and CentOS)\n    node 0.8.0+ on Windows\n\n### How to install clean-css? ###\n\n    npm install clean-css\n\n### How to use clean-css? ###\n\nTo minify a **public.css** file into **public-min.css** do:\n\n    cleancss -o public-min.css public.css\n\nTo minify the same **public.css** into the standard output skip the -o parameter:\n\n    cleancss public.css\n\nMore likely you would like to concatenate couple files like this (if you are on *nix system):\n\n    cat one.css two.css three.css | cleancss -o merged-and-minified.css\n\nor on Windows:\n\n    type one.css two.css three.css | cleancss -o merged-and-minified.css\n\nOr even gzip the result at once:\n\n    cat one.css two.css three.css | cleancss | gzip -9 -c > merged-minified-and-gzipped.css.gz\n\n### How to use clean-css programmatically? ###\n```javascript\n    var cleanCSS = require('clean-css');\n    var source = \"a{font-weight:bold;}\";\n    var minimized = cleanCSS.process(source);\n```\nProcess method accepts a hash as a second parameter (i.e. `cleanCSS.process(source, options)`), with the following options available:\n\n* `keepSpecialComments` - `*` for keeping all (default), `1` for keeping first one, `0` for removing all\n* `keepBreaks` - whether to keep line breaks (default is false)\n* `removeEmpty` - whether to remove empty elements (default is false)\n* `debug` - turns on debug mode (measuring time spent on cleaning up - run `make bench` to see example)\n\n### How do you preserve a comment block? ###\n\nUse `/*!` notation instead of standard one (i.e. `/*`):\n\n    /*!\n      Important comments included in minified output.\n    */\n\n### How to run clean-css tests? ###\n\nFirst clone the source, then run:\n\n    npm test\n\non *nix systems. If you are under Windows then run:\n\n    test.bat\n\n## Acknowledgments ##\n\n* Vincent Voyer (@vvo) for a patch with better empty element regex and for inspiring us to do many performance improvements in 0.4 release.\n* Isaac (@facelessuser) for pointing out a flaw in clean-css' stateless mode.\n* Jan Michael Alonzo (@jmalonzo) for a patch removing node's old 'sys' package.\n* @XhmikosR for suggesting new features (option to remove special comments and strip out urls quotation) and pointing out numerous improvements (JSHint, media queries).\n\n## License ##\n\nClean-css is released under the [MIT License](http://opensource.org/licenses/MIT).\n",
  "readmeFilename": "README.md",
  "_id": "clean-css@0.9.1",
  "_from": "clean-css@0.9.1"
}
